Hey, welcome to my PyAutoLens to-do. This should give you a sense of what we're working on.

Let me know if you think anything is missing, or should be pushed up the to-do list ;)


- Inclusion of lens / source redshifts for analysis.
- Quantitive output of lens model results (e.g. einstein mass, magnification), include otf output
- Add feature to remove astropy bug.
- Include output of data for a simulation (galaxies, ccd settings, etc).
- Add colorbar / features to pixelization plots, fix rectangular plot bug.
- Write Adaptive Grid howtolens.
- Magnification + Caustic + Critical curves
- CCD loading sanity checks
- Interpolation Scheme for fast deflection angles
- SLACS Database (Cristoph)
- Parallelize MultiNest
- Elegent handling of model image generation in lens_fit module, by building model image generation into
  lens_fit_util, in an analogous fashion to unmasked image generation. The key point here is we can make it so
  the fit module does not 'know' whether it is a lens + source plane system, or a multi-plane system. It should
  just generate lists of model images across all planes and for all galaxies.

Possible:

- position updating / thresholding.

Bugs:

- Error message where some adaptive mappers lead to a qhull.Voronoi error
- Rectangular plots of source recons are still skewing.

Feb/Mar) Automated Prior Linking
Feb/Mar) Pixelization which Adapts to source's light (not magnification).
Feb/Mar) Hyper Analysis intergration at high level (e.g. phase).
Feb/Mar) Write hyper analysis howtolens

April) Multi-plane analysis.

2019) Quasar modeling (time-delays, variable cosmology, PSF refinement)
2019) UV-plane
2019) Multi-CCD analysis.




Jan 22

Pipeline with fixed lens mass / source light profile (and the inversion). Vary 4 subhalo parameters (x, y, mass, r_s) and
iterate over intervals of redshift.

M200 mass for NFW halo.

Jan 23

Given the angular coodinates at a given plane, determine the angular coordinates at any given redshift (e.g. for a
given tracer, lens galaxy, source galaxy, etc.).